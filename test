(set-logic QF_UF)
(set-option :produce-unsat-cores true)
(set-option :produce-proofs true)(declare-const p_0 Bool)
(declare-const p_1 Bool)
(declare-const p_2 Bool)
(declare-const p_3 Bool)
(declare-const p_4 Bool)
(declare-const p_5 Bool)
(declare-const p_6 Bool)
(assert (and (and (not (or p_5 p_0)) (and p_2 (=> (and (not (=> (and (not p_0) (and (and (not p_3) (and (and (and (=> p_4 p_3) (and p_0 p_0)) (and (and p_0 p_2) p_2)) (and p_3 (=> (and p_1 p_3) (and p_1 p_4))))) (not (and (and (not (and p_4 p_0)) p_4) (and (and (or p_4 p_0) (and p_0 p_1)) (or (and p_1 p_0) p_5)))))) (and p_3 p_5))) (and (and (or (=> (or (and (and (and p_4 (and p_0 p_2)) (=> (=> p_2 p_4) p_5)) p_4) (and (and (or (not p_4) (and p_4 p_2)) (and (or p_5 p_5) (not p_3))) (and (and (and p_4 p_5) (=> p_3 p_4)) (=> (and p_5 p_0) (or p_4 p_5))))) (=> (or p_1 (and p_2 (=> p_2 p_4))) (=> (=> p_4 (not p_1)) (and (=> (and p_1 p_5) (or p_2 p_3)) (not (and p_0 p_0)))))) (not (and (and (and p_0 p_3) p_5) (=> p_0 (and (and (and p_2 p_1) (or p_1 p_4)) (and (or p_3 p_0) (and p_3 p_0))))))) (=> (and p_4 (and (and (and p_3 p_0) (and (=> (and p_0 p_5) (and p_0 p_5)) (and (and p_4 p_0) p_4))) (=> p_0 (and (not (not p_2)) p_3)))) (and (and (and (and (and (and p_2 p_3) (not p_3)) (not (and p_2 p_1))) (and (and (not p_1) (and p_0 p_1)) (and (and p_1 p_0) (or p_0 p_3)))) (not (or (or (and p_1 p_4) (not p_0)) (and p_3 p_0)))) (not p_5)))) (not (and p_4 (not (not (and (or (not (and p_2 p_4)) (not (=> p_2 p_1))) (and (and (and p_2 p_3) p_4) (and p_1 (or p_3 p_1)))))))))) (and (and (and (and (or (and (and (=> (and (or p_3 p_0) p_0) (or p_0 (or p_5 p_1))) p_2) (and (and (not (not p_5)) (and (and p_1 p_0) (and p_2 p_0))) p_0)) p_0) (not p_4)) (not (and (and (=> (and (or (and p_5 p_0) (and p_0 p_0)) (and (and p_1 p_0) (and p_3 p_2))) (and (and (not p_4) p_4) (and (or p_2 p_4) (and p_4 p_0)))) p_4) (and (or (and p_1 p_3) (and (or (and p_5 p_2) (=> p_3 p_2)) p_1)) (or p_3 (or p_4 (and p_1 (and p_3 p_5)))))))) (and (and (and p_0 (or (or (and (and p_5 p_4) (and (and p_3 p_0) (and p_5 p_5))) (and p_2 (and (not p_1) (and p_0 p_5)))) (not (not (=> (and p_3 p_4) (and p_2 p_0)))))) (and (not (and p_3 (and (and (and p_5 p_3) (and p_0 p_2)) (and (and p_1 p_5) (or p_2 p_4))))) p_2)) (or (and (=> (not (or p_0 (not (and p_1 p_4)))) (and (and (and (not p_3) (and p_0 p_4)) (and (not p_5) (or p_2 p_2))) (and (and (or p_0 p_1) (not p_5)) (and (or p_3 p_4) (not p_4))))) (and (=> (and (and (=> p_5 p_2) p_0) (and (and p_1 p_5) (and p_0 p_4))) (and (or (=> p_3 p_1) (and p_0 p_1)) (and (or p_0 p_2) (and p_1 p_0)))) (and (or (not (and p_0 p_5)) (and (not p_5) (and p_2 p_4))) p_1))) (and (=> (and (not (or (=> p_3 p_2) (and p_2 p_4))) (or (not (and p_4 p_2)) (and (and p_1 p_1) p_5))) (or (and (or (and p_0 p_0) (or p_3 p_5)) (or (and p_4 p_2) (not p_0))) (and p_4 p_3))) (and (and (=> (and (or p_1 p_0) (and p_0 p_1)) (not p_0)) (=> (=> (and p_1 p_1) (and p_2 p_3)) (=> (=> p_2 p_2) (and p_3 p_5)))) (and p_1 (=> (and (and p_2 p_3) (not p_0)) p_2))))))) p_0)))) (and (and (not (not (and p_4 (and (=> (not (and (not (and (and p_1 (=> p_3 p_2)) (or (or p_1 p_3) p_3))) (and (=> (and (=> p_3 p_1) (=> p_2 p_2)) (or (and p_1 p_3) (not p_2))) (and p_0 (=> (and p_2 p_4) (and p_1 p_3)))))) (or p_1 (not (and (and (and (not p_2) (and p_1 p_5)) (and p_3 (and p_2 p_4))) p_5)))) (and p_1 (and p_4 (=> (and (not (and (and p_5 p_2) (and p_0 p_2))) (not (and (not p_5) (and p_1 p_1)))) (not p_1)))))))) (and (and (and p_0 (and (not (or p_2 (=> (and p_4 (and (=> (or p_4 p_3) (=> p_3 p_1)) (and p_4 p_5))) (and (and (not p_5) p_5) (and (and (=> p_2 p_5) (and p_4 p_1)) (or p_5 (or p_3 p_5))))))) p_3)) (=> (=> (not p_3) (and (and p_2 (or (not (=> (and (not p_5) (or p_3 p_4)) (or (not p_2) (and p_1 p_1)))) p_4)) (=> (and (or (and p_5 p_2) (not (or (or p_2 p_4) p_5))) (and (and (=> (and p_3 p_2) p_5) (=> (and p_0 p_5) (and p_2 p_4))) (not (or (and p_5 p_2) p_0)))) p_0))) (and (=> (and (and (and (not (and p_5 (and p_2 p_4))) (not (and (and p_3 p_0) (and p_1 p_1)))) p_1) p_5) (=> p_5 (and (and (or (or (and p_3 p_1) (and p_4 p_0)) (or (not p_4) (and p_5 p_2))) (and (and (and p_0 p_5) (and p_1 p_0)) p_1)) (=> (and p_2 (and (or p_4 p_0) (and p_3 p_2))) (and (and (not p_2) (=> p_3 p_3)) (or p_3 (and p_3 p_2))))))) (not (or (and p_0 p_1) (or (and (=> (and (not p_4) (and p_5 p_1)) p_0) (and (and (or p_1 p_4) (and p_4 p_5)) (or (and p_3 p_1) (and p_1 p_4)))) p_5)))))) (and p_0 (and (and p_1 (not p_3)) (or (and p_2 (and (and (and p_5 (and (and (not p_1) (and p_3 p_1)) p_3)) (and p_0 (or (=> (and p_0 p_3) (and p_0 p_0)) (and p_0 (and p_1 p_3))))) p_0)) (not (and (=> (=> p_2 p_5) (and (and p_1 (=> (and p_4 p_0) (and p_5 p_3))) p_1)) (or (and (and (and (or p_2 p_0) p_0) (and (not p_3) (and p_5 p_0))) (and p_2 (not (and p_2 p_1)))) (and p_3 (=> p_1 p_4)))))))))) (and p_1 (=> (and (and (and (not p_1) p_5) p_1) (and (and (and (=> (and p_5 (or (or (and (or p_1 p_5) p_4) (and (and p_2 p_2) (and p_5 p_1))) (or (=> (=> p_5 p_4) (and p_5 p_4)) (or (and p_2 p_3) (=> p_3 p_0))))) (and (or (and (and (and p_1 p_3) p_2) (and (and p_1 p_2) p_2)) (and (or (and p_2 p_4) (=> p_1 p_1)) (=> p_3 (not p_1)))) (not (or (and (or p_3 p_4) (and p_1 p_1)) (=> (and p_5 p_2) (and p_3 p_2)))))) (=> p_4 (and p_2 p_1))) (or (or (and (=> (and (or (not p_3) (=> p_5 p_3)) (and (or p_1 p_0) (and p_0 p_3))) (and p_3 (and (and p_3 p_2) (and p_4 p_3)))) p_5) (=> p_3 (not (and (not (not p_5)) (not (and p_5 p_4)))))) p_3)) p_1)) (and (and (=> p_1 (or (=> p_1 (or (not (and (and (and p_0 p_5) (or p_4 p_0)) (and (not p_0) (not p_4)))) (not (and (and p_5 (and p_4 p_2)) p_1)))) (and (=> (or (or (and (or p_5 p_1) (not p_4)) (and (and p_1 p_1) p_1)) (not (and (or p_5 p_1) (and p_5 p_4)))) (and (or (and p_3 p_5) p_2) (=> p_1 (not (and p_3 p_0))))) (and (and (and (and (or p_4 p_2) p_2) (or (=> p_3 p_1) p_0)) (=> (and (and p_2 p_4) (and p_0 p_2)) p_1)) (and p_4 (not (not (and p_5 p_2)))))))) (and (or (or p_5 (=> (and (or (and (and p_1 p_5) (or p_3 p_5)) (and p_1 (and p_5 p_1))) (and (=> (and p_2 p_4) (=> p_0 p_5)) p_4)) (not (not (and (and p_5 p_4) (not p_0)))))) (and (or (or p_1 (or (and (and p_3 p_1) (and p_5 p_3)) (and (and p_5 p_4) (and p_3 p_2)))) (and (=> (and (or p_1 p_0) (and p_2 p_5)) (=> (and p_3 p_3) (or p_3 p_4))) (and (or p_4 (and p_1 p_0)) (=> (not p_0) (=> p_2 p_2))))) (or p_4 (and (or (and p_5 (=> p_5 p_2)) (=> (and p_0 p_0) (and p_4 p_3))) (not (or (or p_3 p_5) (and p_0 p_5))))))) p_5)) (or (and (=> (or (not (or (and (and p_4 (and p_0 p_4)) (=> (and p_5 p_0) (and p_5 p_4))) p_5)) (not (and (and (=> p_0 (and p_5 p_4)) (and p_0 (and p_4 p_5))) (and (not (and p_3 p_1)) (and (and p_1 p_3) (and p_1 p_3)))))) (not (or (and (=> (=> (or p_0 p_5) p_2) (and p_3 (or p_2 p_3))) (and p_2 (and (and p_1 p_4) (or p_1 p_4)))) (and (=> p_3 (not (and p_4 p_1))) (and (not (and p_0 p_4)) p_1))))) (or (and p_5 (or (and p_0 (=> p_2 (not (=> p_4 p_2)))) (and (=> (and (and p_5 p_5) (and p_3 p_0)) (or (and p_3 p_1) (or p_5 p_5))) (and (=> (not p_2) (and p_0 p_5)) (not (and p_4 p_2)))))) (not (not (=> (and p_3 (and (and p_1 p_0) (or p_5 p_1))) (and p_2 (and (and p_0 p_1) (=> p_4 p_2)))))))) (and (not (and (not p_0) p_5)) (or (and p_3 p_5) p_5)))))))))
(check-sat)
(get-proof)
(get-unsat-core)